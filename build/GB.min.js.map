{"version":3,"sources":["webpack:///GB.min.js","webpack:///webpack/bootstrap a7f7e59daa341d1a850f","webpack:///./src/GB.js","webpack:///./src/graph.js","webpack:///./src/view.js","webpack:///./src/model.js","webpack:///./src/nodeType.js","webpack:///./src/events.js"],"names":["GB","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","version","graph","view","model","nodeType","events","cfg","start","requestAnimationFrame","s","controls","update","render","data","nodes","forEach","item","obj","scene","getObjectById","nodeId","position","x","countX","y","countY","links","linkId","a","THREE","Vector3","target","b","source","setPos","raycaster","setFromCamera","mouse","camera","intersect","node","intersectObjects","children","composer","hud","renderer","width","height","element","config","clicked","last","prev","this","clientWidth","clientHeight","Scene","OrthographicCamera","z","zoom","updateProjectionMatrix","WebGLRenderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","autoClear","renderModel","RenderPass","effectBloom","BloomPass","effectCopy","ShaderPass","CopyShader","effectFXAA","FXAAShader","uniforms","value","set","renderToScreen","EffectComposer","addPass","Raycaster","Vector2","Object3D","add","OrbitControls","domElement","mouseButtons","ORBIT","ZOOM","PAN","MOUSE","LEFT","minZoom","maxZoom","appendChild","force","d3","layout","gravity","charge","linkDistance","size","addNode","type","fixed","pos","findNode","Sprite","SpriteMaterial","material","_type","_id","push","undefined","dispatchEvent","addLink","i","length","arrowHelper","CustomArrowHelper","removeNode","n","remove","splice","findNodeIndex","allNodeLinks","arr","textureLoader","TextureLoader","map","load","texture","color","rotation","fog","startScale","scale","draggable","emitGlobalEvent","e","eName","d","emitNodeEvent","elem","intersected","object","event","overElement","mouseMove","preventDefault","clientX","clientY","enabled","drag","dragged","px","ray","origin","py","mouseDown","button","mouseUp","dblclick","contextmenu","controlsChanged","updateNodeScale","resize","left","right","top","bottom","addEventListener"],"mappings":"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","file":"GB.min.js","sourcesContent":["var GB =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.version = '0.0.1';\n\t\n\texports.graph = __webpack_require__(1);\n\texports.view = __webpack_require__(2);\n\texports.model = __webpack_require__(3);\n\texports.nodeType = __webpack_require__(4);\n\texports.events = __webpack_require__(5);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (cfg) {\n\t    var s = {\n\t        start: start,\n\t        view: new GB.view(cfg.element),\n\t        nodes: cfg.nodes,\n\t        config: cfg.config || {},\n\t        intersect: {\n\t            node: []\n\t        },\n\t        clicked: {\n\t            last: null,\n\t            prev: null\n\t        }\n\t    };\n\t    s.model = new GB.model(null, s);\n\t    s.events = new GB.events(cfg.element, s, cfg.events);\n\t\n\t    function start() {\n\t        requestAnimationFrame(start);\n\t        s.view.controls.update();\n\t        render();\n\t    }\n\t\n\t    function render() {\n\t        s.model.data.nodes.forEach(function (item) {\n\t            var obj = s.view.scene.getObjectById(item.data.nodeId, true);\n\t            if (obj) {\n\t                obj.position.x = countX(item.x);\n\t                obj.position.y = countY(item.y);\n\t            }\n\t        });\n\t        s.model.data.links.forEach(function (item) {\n\t            var obj = s.view.scene.getObjectById(item.linkId, true);\n\t            var a = new THREE.Vector3(countX(item.target.x), countY(item.target.y), 0);\n\t            var b = new THREE.Vector3(countX(item.source.x), countY(item.source.y), 0);\n\t            obj.setPos(a, b);\n\t        });\n\t\n\t        s.view.raycaster.setFromCamera(s.view.mouse, s.view.camera);\n\t        s.intersect.node = s.view.raycaster.intersectObjects(s.view.nodes.children)[0];\n\t        s.view.composer.render();\n\t        if (s.hud)\n\t            s.view.renderer.render(s.hud.scene, s.hud.camera);\n\t    }\n\t\n\t    function countX(x) {\n\t        return x - s.view.width / 2;\n\t    }\n\t\n\t    function countY(y) {\n\t        return -(y - s.view.height / 2);\n\t    }\n\t\n\t    return s;\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (element) {\n\t    this.width = element.clientWidth;\n\t    this.height = element.clientHeight;\n\t    this.scene = new THREE.Scene();\n\t    this.camera = new THREE.OrthographicCamera(-this.width / 2, this.width / 2, this.height / 2, -this.height / 2, 0, 15);\n\t    this.camera.position.z = 10;\n\t    this.camera.zoom = 4;\n\t    this.camera.updateProjectionMatrix();\n\t\n\t    this.renderer = new THREE.WebGLRenderer({antialias: false, alpha: true});\n\t    this.renderer.setPixelRatio(window.devicePixelRatio);\n\t    this.renderer.setSize(this.width, this.height);\n\t    this.renderer.autoClear = false;\n\t\n\t    var renderModel = new THREE.RenderPass(this.scene, this.camera);\n\t    var effectBloom = new THREE.BloomPass(1);\n\t    var effectCopy = new THREE.ShaderPass(THREE.CopyShader);\n\t    var effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n\t    effectFXAA.uniforms['resolution'].value.set(1 / this.width, 1 / this.height);\n\t    effectCopy.renderToScreen = true;\n\t\n\t    this.composer = new THREE.EffectComposer(this.renderer);\n\t    this.composer.setSize(this.width, this.height);\n\t\n\t    this.composer.addPass(renderModel);\n\t    this.composer.addPass(effectFXAA);\n\t    this.composer.addPass(effectBloom);\n\t    this.composer.addPass(effectCopy);\n\t\n\t    this.raycaster = new THREE.Raycaster();\n\t    this.mouse = new THREE.Vector2();\n\t\n\t    this.nodes = new THREE.Object3D;\n\t    this.links = new THREE.Object3D;\n\t    this.links.position.z = 4;\n\t    this.nodes.position.z = 6;\n\t\n\t    this.scene.add(this.nodes);\n\t    this.scene.add(this.links);\n\t\n\t    this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n\t    this.controls.mouseButtons = {ORBIT: null, ZOOM: null, PAN: THREE.MOUSE.LEFT};\n\t    this.controls.minZoom = 0.5;\n\t    this.controls.maxZoom = 10;\n\t\n\t    element.appendChild(this.renderer.domElement);\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (data, s) {\n\t    this.data = data || {\n\t            \"nodes\": [],\n\t            \"links\": []\n\t        };\n\t\n\t    this.force = d3.layout.force()\n\t        .nodes(this.data.nodes)\n\t        .links(this.data.links)\n\t        .gravity(0.002)\n\t        .charge(-100)\n\t        .linkDistance(35)\n\t        .size([s.view.width, s.view.height])\n\t        .start();\n\t\n\t    this.addNode = function (id, data, type, fixed, pos) {\n\t        if (this.findNode(id)) {\n\t            return;\n\t        }\n\t\n\t        type = type ? type : 'default';\n\t\n\t        var node = new THREE.Sprite(new THREE.SpriteMaterial(s.nodes[type].material));\n\t        node._type = type;\n\t        node._id = id;\n\t        s.view.nodes.add(node);\n\t\n\t        data.nodeId = node.id;\n\t        data.type = type;\n\t\n\t        this.data.nodes.push({\n\t            \"id\": id,\n\t            data: data,\n\t            fixed: fixed || false,\n\t            x: pos ? pos.x : undefined,\n\t            y: pos ? pos.y : undefined\n\t        });\n\t\n\t        s.view.controls.dispatchEvent({type: 'change'});\n\t        this.force.start();\n\t    };\n\t    this.addLink = function (source, target, value) {\n\t        for (var i = 0; i < this.data.links.length; i++) {\n\t            if (this.data.links[i]['source'].id === source && this.data.links[i]['target'].id === target) {\n\t                return;\n\t            }\n\t        }\n\t        var arrowHelper = new THREE.CustomArrowHelper(new THREE.Vector3(100, 0, 0), new THREE.Vector3(0, 0, 0), 1, 0x85ceff);\n\t        s.view.links.add(arrowHelper);\n\t\n\t        this.data.links.push({\n\t            \"source\": this.findNode(source),\n\t            \"target\": this.findNode(target),\n\t            \"value\": value,\n\t            \"linkId\": arrowHelper.id\n\t        });\n\t\n\t        this.force.start();\n\t    };\n\t    this.findNode = function (id) {\n\t        for (var i in this.data.nodes) {\n\t            if (this.data.nodes[i][\"id\"] === id) return this.data.nodes[i];\n\t        }\n\t    };\n\t    this.removeNode = function (id) {\n\t        var i = 0;\n\t        var n = this.findNode(id);\n\t        s.view.nodes.remove(s.view.nodes.getObjectById(n.data.nodeId, true));\n\t\n\t        while (i < this.data.links.length) {\n\t            if ((this.data.links[i]['source'].id === id) || (this.data.links[i]['target'].id === id)) {\n\t                s.view.links.remove(s.view.links.getObjectById(this.data.links[i].linkId, true));\n\t                this.data.links.splice(i, 1);\n\t            }\n\t            else i++;\n\t        }\n\t        this.data.nodes.splice(this.findNodeIndex(id), 1);\n\t\n\t        this.force.start();\n\t    };\n\t    this.findNodeIndex = function (id) {\n\t        for (var i = 0; i < this.data.nodes.length; i++) {\n\t            if (this.data.nodes[i].id == id) {\n\t                return i;\n\t            }\n\t        }\n\t    };\n\t    this.allNodeLinks = function (id) {\n\t        var arr = [];\n\t        this.data.links.forEach(function (item) {\n\t            if (item['source'].id == id) {\n\t                arr.push(item['target'].id);\n\t            } else if (item['target'].id == id) {\n\t                arr.push(item['source'].id);\n\t            }\n\t        });\n\t        return arr;\n\t    };\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (data) {\n\t    var textureLoader = new THREE.TextureLoader();\n\t\n\t    this.material = {\n\t        map: textureLoader.load(data.material.texture) || null,\n\t        color: data.material.color || null,\n\t        rotation: data.material.rotation || null,\n\t        fog: data.material.fog || null\n\t    };\n\t\n\t    this.startScale = data.material.scale;\n\t    this.draggable = data.draggable === undefined ? true : data.draggable;\n\t    this.events = data.events || {};\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (element, s, events) {\n\t    var overElement;\n\t\n\t    this.mouseMove = function (e) {\n\t        e.preventDefault();\n\t\n\t        s.view.mouse.x = ( e.clientX / element.clientWidth ) * 2 - 1;\n\t        s.view.mouse.y = -( e.clientY / element.clientHeight ) * 2 + 1;\n\t\n\t\n\t        if (!s.view.controls.enabled) {\n\t            s.view.controls.drag.fixed = true;\n\t            s.view.controls.drag.dragged = true;\n\t            s.view.controls.drag.px = s.view.raycaster.ray.origin.x + s.view.width / 2;\n\t            s.view.controls.drag.py = -(s.view.raycaster.ray.origin.y - s.view.height / 2);\n\t            s.model.force.start();\n\t            emitNodeEvent(e, 'mousemove', overElement);\n\t            return;\n\t        }\n\t        if (s.intersect.node) {\n\t            if (!overElement) {\n\t                overElement = s.intersect.node.object;\n\t                emitNodeEvent(e, 'mouseover', overElement);\n\t            } else if (overElement !== s.intersect.node.object) {\n\t                emitNodeEvent(e, 'mouseout', overElement);\n\t                overElement = null;\n\t            }\n\t            emitNodeEvent(e, 'mousemove');\n\t        } else if (overElement) {\n\t            emitNodeEvent(e, 'mouseout', overElement);\n\t            overElement = null;\n\t        }\n\t    };\n\t\n\t    this.mouseDown = function (e) {\n\t        if (e.button !== 0) {\n\t            return;\n\t        }\n\t        e.preventDefault();\n\t\n\t        if (s.intersect.node && s.nodes[s.intersect.node.object._type].draggable) {\n\t            s.view.controls.enabled = false;\n\t            s.view.controls.drag = s.model.findNode(s.intersect.node.object._id);\n\t            s.view.controls.drag.dragged = false;\n\t        }\n\t    };\n\t\n\t    this.mouseUp = function (e) {\n\t        if (e.button !== 0) {\n\t            return;\n\t        }\n\t        e.preventDefault();\n\t\n\t        s.view.controls.enabled = true;\n\t\n\t        if (s.intersect.node) {\n\t            s.clicked.prev = s.clicked.last;\n\t            s.clicked.last = s.intersect.node.object;\n\t        } else {\n\t            emitGlobalEvent(e, 'emptyClick');\n\t            s.clicked.last = null;\n\t        }\n\t\n\t        if (s.view.controls.drag) {\n\t            if (!s.view.controls.drag.dragged) {\n\t                emitNodeEvent(e, 'click');\n\t            }\n\t\n\t            s.view.controls.drag.dragged = false;\n\t        }\n\t    };\n\t\n\t    this.dblclick = function (e) {\n\t        emitNodeEvent(e, 'dblclick');\n\t    };\n\t\n\t    this.contextmenu = function (e) {\n\t        emitNodeEvent(e, 'contextmenu');\n\t    };\n\t\n\t    this.controlsChanged = function (e) {\n\t        if (s.config.updateNodeScale) {\n\t            s.view.nodes.children.forEach(function (item) {\n\t                var scale = (s.view.controls.maxZoom - s.view.camera.zoom) + s.nodes[item._type].startScale;\n\t                item.scale.set(scale, scale, 1);\n\t            });\n\t        }\n\t        emitGlobalEvent(e, 'controlsChanged');\n\t    };\n\t\n\t    this.resize = function (e) {\n\t        s.view.width = element.clientWidth;\n\t        s.view.height = element.clientHeight;\n\t\n\t        s.view.renderer.setSize(s.view.width, s.view.height);\n\t        s.view.composer.setSize(s.view.width, s.view.height);\n\t        s.view.camera.left = s.view.width / -2;\n\t        s.view.camera.right = s.view.width / 2;\n\t        s.view.camera.top = s.view.height / 2;\n\t        s.view.camera.bottom = s.view.height / -2;\n\t        s.view.camera.updateProjectionMatrix();\n\t    };\n\t\n\t    function emitGlobalEvent(e, eName, d, s) {\n\t        if (events && events[eName]) {\n\t            if (d && s) {\n\t                events[eName](e, d, s);\n\t            } else {\n\t                events[eName](e);\n\t            }\n\t        }\n\t    }\n\t\n\t    function emitNodeEvent(e, eName, elem) {\n\t        var intersected = elem !== undefined ? elem : s.intersect.node ? s.intersect.node.object : undefined;\n\t        if (intersected) {\n\t            var events = s.nodes[intersected._type].events;\n\t            var event = events[eName],\n\t                node = s.model.findNode(intersected._id);\n\t            emitGlobalEvent(e, eName, node, intersected);\n\t            if (event) {\n\t                event(e, node, intersected);\n\t            }\n\t        }\n\t    }\n\t\n\t    element.addEventListener('mousemove', this.mouseMove, false);\n\t    element.addEventListener('mousedown', this.mouseDown, false);\n\t    element.addEventListener('mouseup', this.mouseUp, false);\n\t    element.addEventListener('dblclick', this.dblclick, false);\n\t    element.addEventListener('contextmenu', this.contextmenu, false);\n\t    //window.addEventListener('resize', this.resize, false);\n\t\n\t    s.view.controls.addEventListener('change', this.controlsChanged);\n\t\n\t};\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** GB.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a7f7e59daa341d1a850f\n **/","exports.version = '0.0.1';\n\nexports.graph = require('./graph');\nexports.view = require('./view');\nexports.model = require('./model');\nexports.nodeType = require('./nodeType');\nexports.events = require('./events');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GB.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (cfg) {\n    var s = {\n        start: start,\n        view: new GB.view(cfg.element),\n        nodes: cfg.nodes,\n        config: cfg.config || {},\n        intersect: {\n            node: []\n        },\n        clicked: {\n            last: null,\n            prev: null\n        }\n    };\n    s.model = new GB.model(null, s);\n    s.events = new GB.events(cfg.element, s, cfg.events);\n\n    function start() {\n        requestAnimationFrame(start);\n        s.view.controls.update();\n        render();\n    }\n\n    function render() {\n        s.model.data.nodes.forEach(function (item) {\n            var obj = s.view.scene.getObjectById(item.data.nodeId, true);\n            if (obj) {\n                obj.position.x = countX(item.x);\n                obj.position.y = countY(item.y);\n            }\n        });\n        s.model.data.links.forEach(function (item) {\n            var obj = s.view.scene.getObjectById(item.linkId, true);\n            var a = new THREE.Vector3(countX(item.target.x), countY(item.target.y), 0);\n            var b = new THREE.Vector3(countX(item.source.x), countY(item.source.y), 0);\n            obj.setPos(a, b);\n        });\n\n        s.view.raycaster.setFromCamera(s.view.mouse, s.view.camera);\n        s.intersect.node = s.view.raycaster.intersectObjects(s.view.nodes.children)[0];\n        s.view.composer.render();\n        if (s.hud)\n            s.view.renderer.render(s.hud.scene, s.hud.camera);\n    }\n\n    function countX(x) {\n        return x - s.view.width / 2;\n    }\n\n    function countY(y) {\n        return -(y - s.view.height / 2);\n    }\n\n    return s;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/graph.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = function (element) {\n    this.width = element.clientWidth;\n    this.height = element.clientHeight;\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.OrthographicCamera(-this.width / 2, this.width / 2, this.height / 2, -this.height / 2, 0, 15);\n    this.camera.position.z = 10;\n    this.camera.zoom = 4;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer = new THREE.WebGLRenderer({antialias: false, alpha: true});\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.autoClear = false;\n\n    var renderModel = new THREE.RenderPass(this.scene, this.camera);\n    var effectBloom = new THREE.BloomPass(1);\n    var effectCopy = new THREE.ShaderPass(THREE.CopyShader);\n    var effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n    effectFXAA.uniforms['resolution'].value.set(1 / this.width, 1 / this.height);\n    effectCopy.renderToScreen = true;\n\n    this.composer = new THREE.EffectComposer(this.renderer);\n    this.composer.setSize(this.width, this.height);\n\n    this.composer.addPass(renderModel);\n    this.composer.addPass(effectFXAA);\n    this.composer.addPass(effectBloom);\n    this.composer.addPass(effectCopy);\n\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n\n    this.nodes = new THREE.Object3D;\n    this.links = new THREE.Object3D;\n    this.links.position.z = 4;\n    this.nodes.position.z = 6;\n\n    this.scene.add(this.nodes);\n    this.scene.add(this.links);\n\n    this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.mouseButtons = {ORBIT: null, ZOOM: null, PAN: THREE.MOUSE.LEFT};\n    this.controls.minZoom = 0.5;\n    this.controls.maxZoom = 10;\n\n    element.appendChild(this.renderer.domElement);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/view.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = function (data, s) {\n    this.data = data || {\n            \"nodes\": [],\n            \"links\": []\n        };\n\n    this.force = d3.layout.force()\n        .nodes(this.data.nodes)\n        .links(this.data.links)\n        .gravity(0.002)\n        .charge(-100)\n        .linkDistance(35)\n        .size([s.view.width, s.view.height])\n        .start();\n\n    this.addNode = function (id, data, type, fixed, pos) {\n        if (this.findNode(id)) {\n            return;\n        }\n\n        type = type ? type : 'default';\n\n        var node = new THREE.Sprite(new THREE.SpriteMaterial(s.nodes[type].material));\n        node._type = type;\n        node._id = id;\n        s.view.nodes.add(node);\n\n        data.nodeId = node.id;\n        data.type = type;\n\n        this.data.nodes.push({\n            \"id\": id,\n            data: data,\n            fixed: fixed || false,\n            x: pos ? pos.x : undefined,\n            y: pos ? pos.y : undefined\n        });\n\n        s.view.controls.dispatchEvent({type: 'change'});\n        this.force.start();\n    };\n    this.addLink = function (source, target, value) {\n        for (var i = 0; i < this.data.links.length; i++) {\n            if (this.data.links[i]['source'].id === source && this.data.links[i]['target'].id === target) {\n                return;\n            }\n        }\n        var arrowHelper = new THREE.CustomArrowHelper(new THREE.Vector3(100, 0, 0), new THREE.Vector3(0, 0, 0), 1, 0x85ceff);\n        s.view.links.add(arrowHelper);\n\n        this.data.links.push({\n            \"source\": this.findNode(source),\n            \"target\": this.findNode(target),\n            \"value\": value,\n            \"linkId\": arrowHelper.id\n        });\n\n        this.force.start();\n    };\n    this.findNode = function (id) {\n        for (var i in this.data.nodes) {\n            if (this.data.nodes[i][\"id\"] === id) return this.data.nodes[i];\n        }\n    };\n    this.removeNode = function (id) {\n        var i = 0;\n        var n = this.findNode(id);\n        s.view.nodes.remove(s.view.nodes.getObjectById(n.data.nodeId, true));\n\n        while (i < this.data.links.length) {\n            if ((this.data.links[i]['source'].id === id) || (this.data.links[i]['target'].id === id)) {\n                s.view.links.remove(s.view.links.getObjectById(this.data.links[i].linkId, true));\n                this.data.links.splice(i, 1);\n            }\n            else i++;\n        }\n        this.data.nodes.splice(this.findNodeIndex(id), 1);\n\n        this.force.start();\n    };\n    this.findNodeIndex = function (id) {\n        for (var i = 0; i < this.data.nodes.length; i++) {\n            if (this.data.nodes[i].id == id) {\n                return i;\n            }\n        }\n    };\n    this.allNodeLinks = function (id) {\n        var arr = [];\n        this.data.links.forEach(function (item) {\n            if (item['source'].id == id) {\n                arr.push(item['target'].id);\n            } else if (item['target'].id == id) {\n                arr.push(item['source'].id);\n            }\n        });\n        return arr;\n    };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/model.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = function (data) {\n    var textureLoader = new THREE.TextureLoader();\n\n    this.material = {\n        map: textureLoader.load(data.material.texture) || null,\n        color: data.material.color || null,\n        rotation: data.material.rotation || null,\n        fog: data.material.fog || null\n    };\n\n    this.startScale = data.material.scale;\n    this.draggable = data.draggable === undefined ? true : data.draggable;\n    this.events = data.events || {};\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nodeType.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = function (element, s, events) {\n    var overElement;\n\n    this.mouseMove = function (e) {\n        e.preventDefault();\n\n        s.view.mouse.x = ( e.clientX / element.clientWidth ) * 2 - 1;\n        s.view.mouse.y = -( e.clientY / element.clientHeight ) * 2 + 1;\n\n\n        if (!s.view.controls.enabled) {\n            s.view.controls.drag.fixed = true;\n            s.view.controls.drag.dragged = true;\n            s.view.controls.drag.px = s.view.raycaster.ray.origin.x + s.view.width / 2;\n            s.view.controls.drag.py = -(s.view.raycaster.ray.origin.y - s.view.height / 2);\n            s.model.force.start();\n            emitNodeEvent(e, 'mousemove', overElement);\n            return;\n        }\n        if (s.intersect.node) {\n            if (!overElement) {\n                overElement = s.intersect.node.object;\n                emitNodeEvent(e, 'mouseover', overElement);\n            } else if (overElement !== s.intersect.node.object) {\n                emitNodeEvent(e, 'mouseout', overElement);\n                overElement = null;\n            }\n            emitNodeEvent(e, 'mousemove');\n        } else if (overElement) {\n            emitNodeEvent(e, 'mouseout', overElement);\n            overElement = null;\n        }\n    };\n\n    this.mouseDown = function (e) {\n        if (e.button !== 0) {\n            return;\n        }\n        e.preventDefault();\n\n        if (s.intersect.node && s.nodes[s.intersect.node.object._type].draggable) {\n            s.view.controls.enabled = false;\n            s.view.controls.drag = s.model.findNode(s.intersect.node.object._id);\n            s.view.controls.drag.dragged = false;\n        }\n    };\n\n    this.mouseUp = function (e) {\n        if (e.button !== 0) {\n            return;\n        }\n        e.preventDefault();\n\n        s.view.controls.enabled = true;\n\n        if (s.intersect.node) {\n            s.clicked.prev = s.clicked.last;\n            s.clicked.last = s.intersect.node.object;\n        } else {\n            emitGlobalEvent(e, 'emptyClick');\n            s.clicked.last = null;\n        }\n\n        if (s.view.controls.drag) {\n            if (!s.view.controls.drag.dragged) {\n                emitNodeEvent(e, 'click');\n            }\n\n            s.view.controls.drag.dragged = false;\n        }\n    };\n\n    this.dblclick = function (e) {\n        emitNodeEvent(e, 'dblclick');\n    };\n\n    this.contextmenu = function (e) {\n        emitNodeEvent(e, 'contextmenu');\n    };\n\n    this.controlsChanged = function (e) {\n        if (s.config.updateNodeScale) {\n            s.view.nodes.children.forEach(function (item) {\n                var scale = (s.view.controls.maxZoom - s.view.camera.zoom) + s.nodes[item._type].startScale;\n                item.scale.set(scale, scale, 1);\n            });\n        }\n        emitGlobalEvent(e, 'controlsChanged');\n    };\n\n    this.resize = function (e) {\n        s.view.width = element.clientWidth;\n        s.view.height = element.clientHeight;\n\n        s.view.renderer.setSize(s.view.width, s.view.height);\n        s.view.composer.setSize(s.view.width, s.view.height);\n        s.view.camera.left = s.view.width / -2;\n        s.view.camera.right = s.view.width / 2;\n        s.view.camera.top = s.view.height / 2;\n        s.view.camera.bottom = s.view.height / -2;\n        s.view.camera.updateProjectionMatrix();\n    };\n\n    function emitGlobalEvent(e, eName, d, s) {\n        if (events && events[eName]) {\n            if (d && s) {\n                events[eName](e, d, s);\n            } else {\n                events[eName](e);\n            }\n        }\n    }\n\n    function emitNodeEvent(e, eName, elem) {\n        var intersected = elem !== undefined ? elem : s.intersect.node ? s.intersect.node.object : undefined;\n        if (intersected) {\n            var events = s.nodes[intersected._type].events;\n            var event = events[eName],\n                node = s.model.findNode(intersected._id);\n            emitGlobalEvent(e, eName, node, intersected);\n            if (event) {\n                event(e, node, intersected);\n            }\n        }\n    }\n\n    element.addEventListener('mousemove', this.mouseMove, false);\n    element.addEventListener('mousedown', this.mouseDown, false);\n    element.addEventListener('mouseup', this.mouseUp, false);\n    element.addEventListener('dblclick', this.dblclick, false);\n    element.addEventListener('contextmenu', this.contextmenu, false);\n    //window.addEventListener('resize', this.resize, false);\n\n    s.view.controls.addEventListener('change', this.controlsChanged);\n\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/events.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}