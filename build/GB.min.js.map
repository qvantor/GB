{"version":3,"sources":["webpack:///GB.min.js","webpack:///webpack/bootstrap f7d1b51ea0ef298d9f53","webpack:///./src/GB.js","webpack:///./src/graph.js","webpack:///./src/view.js","webpack:///./src/model.js","webpack:///./src/nodeTypes.js","webpack:///./src/events.js"],"names":["GB","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","version","graph","view","model","nodeTypes","events","cfg","start","requestAnimationFrame","s","controls","update","render","data","nodes","forEach","item","obj","scene","getObjectById","nodeId","position","x","countX","y","countY","links","linkId","geometry","vertices","source","target","verticesNeedUpdate","computeBoundingSphere","raycaster","setFromCamera","mouse","camera","intersect","node","intersectObjects","children","composer","hud","renderer","width","height","element","config","globalEvents","clicked","last","prev","this","offsetWidth","offsetHeight","THREE","Scene","OrthographicCamera","z","zoom","updateProjectionMatrix","WebGLRenderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","autoClear","renderModel","RenderPass","effectBloom","BloomPass","effectCopy","ShaderPass","CopyShader","effectFXAA","FXAAShader","uniforms","value","set","renderToScreen","EffectComposer","addPass","Raycaster","Vector2","Object3D","add","OrbitControls","domElement","mouseButtons","ORBIT","ZOOM","PAN","MOUSE","LEFT","minZoom","maxZoom","appendChild","force","d3","layout","gravity","charge","linkDistance","size","addNode","type","fixed","pos","findNode","Sprite","SpriteMaterial","material","_type","_id","push","undefined","dispatchEvent","addLink","color","i","length","Geometry","Vector3","line","Line","LineBasicMaterial","removeNode","n","remove","splice","findNodeIndex","allNodeLinks","arr","nodeType","textureLoader","TextureLoader","map","load","texture","rotation","fog","startScale","scale","draggable","types","key","emitGlobalEvent","e","eName","sprite","emitNodeEvent","elem","intersected","object","event","overElement","mouseMove","preventDefault","clientX","clientWidth","clientY","clientHeight","enabled","drag","dragged","px","ray","origin","py","mouseDown","button","mouseUp","dblclick","contextmenu","controlsChanged","updateNodeScale","resize","left","right","top","bottom","addEventListener"],"mappings":"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","file":"GB.min.js","sourcesContent":["var GB =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.version = '0.0.1';\n\t\n\texports.graph = __webpack_require__(1);\n\texports.view = __webpack_require__(2);\n\texports.model = __webpack_require__(3);\n\texports.nodeTypes = __webpack_require__(4);\n\texports.events = __webpack_require__(5);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (cfg) {\n\t    var s = {\n\t        start: start,\n\t        view: new GB.view(cfg.element),\n\t        nodes: new GB.nodeTypes(cfg.nodes),\n\t        config: cfg.config || {},\n\t        globalEvents: cfg.events || {},\n\t        intersect: {\n\t            node: []\n\t        },\n\t        clicked: {\n\t            last: null,\n\t            prev: null\n\t        }\n\t    };\n\t    s.model = new GB.model(null, s);\n\t    s.events = new GB.events(cfg.element, s);\n\t\n\t    function start() {\n\t        requestAnimationFrame(start);\n\t        s.view.controls.update();\n\t        render();\n\t    }\n\t\n\t    function render() {\n\t        s.model.data.nodes.forEach(function (item) {\n\t            var obj = s.view.scene.getObjectById(item.data.nodeId, true);\n\t            if (obj) {\n\t                obj.position.x = countX(item.x);\n\t                obj.position.y = countY(item.y);\n\t            }\n\t        });\n\t        s.model.data.links.forEach(function (item) {\n\t            var obj = s.view.scene.getObjectById(item.linkId, true);\n\t            obj.geometry.vertices[0].x = countX(item.source.x);\n\t            obj.geometry.vertices[0].y = countY(item.source.y);\n\t\n\t            obj.geometry.vertices[1].x = countX(item.target.x);\n\t            obj.geometry.vertices[1].y = countY(item.target.y);\n\t            obj.geometry.verticesNeedUpdate = true;\n\t            obj.geometry.computeBoundingSphere();\n\t        });\n\t\n\t        s.view.raycaster.setFromCamera(s.view.mouse, s.view.camera);\n\t        s.intersect.node = s.view.raycaster.intersectObjects(s.view.nodes.children)[0];\n\t        s.view.composer.render();\n\t        if (s.hud)\n\t            s.view.renderer.render(s.hud.scene, s.hud.camera);\n\t    }\n\t\n\t    function countX(x) {\n\t        return x - s.view.width / 2;\n\t    }\n\t\n\t    function countY(y) {\n\t        return -(y - s.view.height / 2);\n\t    }\n\t\n\t    return s;\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (element) {\n\t    this.width = element.offsetWidth;\n\t    this.height = element.offsetHeight;\n\t    this.scene = new THREE.Scene();\n\t    this.camera = new THREE.OrthographicCamera(-this.width / 2, this.width / 2, this.height / 2, -this.height / 2, 0, 15);\n\t    this.camera.position.z = 10;\n\t    this.camera.zoom = 4;\n\t    this.camera.updateProjectionMatrix();\n\t\n\t    this.renderer = new THREE.WebGLRenderer({antialias: false, alpha: true});\n\t    this.renderer.setPixelRatio(window.devicePixelRatio);\n\t    this.renderer.setSize(this.width, this.height);\n\t    this.renderer.autoClear = false;\n\t\n\t    var renderModel = new THREE.RenderPass(this.scene, this.camera);\n\t    var effectBloom = new THREE.BloomPass(.7);\n\t    var effectCopy = new THREE.ShaderPass(THREE.CopyShader);\n\t    var effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n\t    effectFXAA.uniforms['resolution'].value.set(1 / this.width, 1 / this.height);\n\t    effectCopy.renderToScreen = true;\n\t\n\t    this.composer = new THREE.EffectComposer(this.renderer);\n\t    this.composer.setSize(this.width, this.height);\n\t\n\t    this.composer.addPass(renderModel);\n\t    this.composer.addPass(effectFXAA);\n\t    this.composer.addPass(effectBloom);\n\t    this.composer.addPass(effectCopy);\n\t\n\t    this.raycaster = new THREE.Raycaster();\n\t    this.mouse = new THREE.Vector2();\n\t\n\t    this.nodes = new THREE.Object3D;\n\t    this.links = new THREE.Object3D;\n\t    this.links.position.z = 4;\n\t    this.nodes.position.z = 6;\n\t\n\t    this.scene.add(this.nodes);\n\t    this.scene.add(this.links);\n\t\n\t    this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n\t    this.controls.mouseButtons = {ORBIT: null, ZOOM: null, PAN: THREE.MOUSE.LEFT};\n\t    this.controls.minZoom = 0.5;\n\t    this.controls.maxZoom = 10;\n\t\n\t    element.appendChild(this.renderer.domElement);\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (data, s) {\n\t    this.data = data || {\n\t            \"nodes\": [],\n\t            \"links\": []\n\t        };\n\t\n\t    this.force = d3.layout.force()\n\t        .nodes(this.data.nodes)\n\t        .links(this.data.links)\n\t        .gravity(0.002)\n\t        .charge(-100)\n\t        .linkDistance(35)\n\t        .size([s.view.width, s.view.height])\n\t        .start();\n\t\n\t    this.addNode = function (id, data, type, fixed, pos) {\n\t        if (this.findNode(id)) {\n\t            return;\n\t        }\n\t\n\t        type = type ? type : 'default';\n\t\n\t        var node = new THREE.Sprite(new THREE.SpriteMaterial(s.nodes[type].material));\n\t        node._type = type;\n\t        node._id = id;\n\t        s.view.nodes.add(node);\n\t\n\t        data.nodeId = node.id;\n\t        data.type = type;\n\t\n\t        this.data.nodes.push({\n\t            \"id\": id,\n\t            data: data,\n\t            fixed: fixed || false,\n\t            x: pos ? pos.x : undefined,\n\t            y: pos ? pos.y : undefined\n\t        });\n\t\n\t        s.view.controls.dispatchEvent({type: 'change'});\n\t        this.force.start();\n\t    };\n\t    this.addLink = function (source, target, value, color) {\n\t        for (var i = 0; i < this.data.links.length; i++) {\n\t            if (this.data.links[i]['source'].id === source && this.data.links[i]['target'].id === target) {\n\t                return;\n\t            }\n\t        }\n\t\n\t        var geometry = new THREE.Geometry();\n\t        geometry.vertices.push(\n\t            new THREE.Vector3(0, 0, 0),\n\t            new THREE.Vector3(1, 0, 0)\n\t        );\n\t        var line = new THREE.Line(geometry, new THREE.LineBasicMaterial({\n\t            color: color || 0x7f8c8d\n\t        }));\n\t        s.view.links.add(line);\n\t\n\t        this.data.links.push({\n\t            \"source\": this.findNode(source),\n\t            \"target\": this.findNode(target),\n\t            \"value\": value,\n\t            \"linkId\": line.id\n\t        });\n\t\n\t        this.force.start();\n\t    };\n\t    this.findNode = function (id) {\n\t        for (var i in this.data.nodes) {\n\t            if (this.data.nodes[i][\"id\"] === id) return this.data.nodes[i];\n\t        }\n\t    };\n\t    this.removeNode = function (id) {\n\t        var i = 0;\n\t        var n = this.findNode(id);\n\t        s.view.nodes.remove(s.view.nodes.getObjectById(n.data.nodeId, true));\n\t\n\t        while (i < this.data.links.length) {\n\t            if ((this.data.links[i]['source'].id === id) || (this.data.links[i]['target'].id === id)) {\n\t                s.view.links.remove(s.view.links.getObjectById(this.data.links[i].linkId, true));\n\t                this.data.links.splice(i, 1);\n\t            }\n\t            else i++;\n\t        }\n\t        this.data.nodes.splice(this.findNodeIndex(id), 1);\n\t\n\t        this.force.start();\n\t    };\n\t    this.findNodeIndex = function (id) {\n\t        for (var i = 0; i < this.data.nodes.length; i++) {\n\t            if (this.data.nodes[i].id == id) {\n\t                return i;\n\t            }\n\t        }\n\t    };\n\t    this.allNodeLinks = function (id) {\n\t        var arr = [];\n\t        this.data.links.forEach(function (item) {\n\t            if (item['source'].id == id) {\n\t                arr.push(item['target'].id);\n\t            } else if (item['target'].id == id) {\n\t                arr.push(item['source'].id);\n\t            }\n\t        });\n\t        return arr;\n\t    };\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (data) {\n\t    function nodeType(data) {\n\t        var textureLoader = new THREE.TextureLoader();\n\t\n\t        this.material = {\n\t            map: textureLoader.load(data.material.texture) || null,\n\t            color: data.material.color || null,\n\t            rotation: data.material.rotation || null,\n\t            fog: data.material.fog || null\n\t        };\n\t        this.texture = data.material.texture;\n\t\n\t        this.startScale = data.material.scale;\n\t        this.draggable = data.draggable === undefined ? true : data.draggable;\n\t        this.events = data.events || {};\n\t    }\n\t\n\t    var types = {};\n\t    for (var key in data) {\n\t        types[key] = new nodeType(data[key]);\n\t    }\n\t    return types;\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (element, s) {\n\t    var overElement;\n\t\n\t    this.mouseMove = function (e) {\n\t        e.preventDefault();\n\t\n\t        s.view.mouse.x = ( e.clientX / element.clientWidth ) * 2 - 1;\n\t        s.view.mouse.y = -( e.clientY / element.clientHeight ) * 2 + 1;\n\t\n\t\n\t        if (!s.view.controls.enabled) {\n\t            s.view.controls.drag.fixed = true;\n\t            s.view.controls.drag.dragged = true;\n\t            s.view.controls.drag.px = s.view.raycaster.ray.origin.x + s.view.width / 2;\n\t            s.view.controls.drag.py = -(s.view.raycaster.ray.origin.y - s.view.height / 2);\n\t            s.model.force.start();\n\t            emitNodeEvent(e, 'mousemove', overElement);\n\t            return;\n\t        }\n\t        if (s.intersect.node) {\n\t            if (!overElement) {\n\t                overElement = s.intersect.node.object;\n\t                emitNodeEvent(e, 'mouseover', overElement);\n\t            } else if (overElement !== s.intersect.node.object) {\n\t                emitNodeEvent(e, 'mouseout', overElement);\n\t                overElement = null;\n\t            }\n\t            emitNodeEvent(e, 'mousemove');\n\t        } else if (overElement) {\n\t            emitNodeEvent(e, 'mouseout', overElement);\n\t            overElement = null;\n\t        }\n\t    };\n\t\n\t    this.mouseDown = function (e) {\n\t        if (e.button !== 0) {\n\t            return;\n\t        }\n\t        e.preventDefault();\n\t\n\t        if (s.intersect.node && s.nodes[s.intersect.node.object._type].draggable) {\n\t            s.view.controls.enabled = false;\n\t            s.view.controls.drag = s.model.findNode(s.intersect.node.object._id);\n\t            s.view.controls.drag.dragged = false;\n\t        }\n\t    };\n\t\n\t    this.mouseUp = function (e) {\n\t        if (e.button !== 0) {\n\t            return;\n\t        }\n\t        e.preventDefault();\n\t\n\t        s.view.controls.enabled = true;\n\t\n\t        if (s.intersect.node) {\n\t            s.clicked.prev = s.clicked.last;\n\t            s.clicked.last = s.intersect.node.object;\n\t        } else {\n\t            emitGlobalEvent(e, 'emptyClick');\n\t            s.clicked.last = null;\n\t        }\n\t\n\t        if (s.view.controls.drag) {\n\t            if (!s.view.controls.drag.dragged) {\n\t                emitNodeEvent(e, 'click');\n\t            }\n\t\n\t            s.view.controls.drag.dragged = false;\n\t        }\n\t    };\n\t\n\t    this.dblclick = function (e) {\n\t        emitNodeEvent(e, 'dblclick');\n\t    };\n\t\n\t    this.contextmenu = function (e) {\n\t        emitNodeEvent(e, 'contextmenu');\n\t    };\n\t\n\t    this.controlsChanged = function (e) {\n\t        if (s.config.updateNodeScale) {\n\t            s.view.nodes.children.forEach(function (item) {\n\t                var scale = (s.view.controls.maxZoom - s.view.camera.zoom) + s.nodes[item._type].startScale;\n\t                item.scale.set(scale, scale, 1);\n\t            });\n\t        }\n\t        emitGlobalEvent(e, 'controlsChanged');\n\t    };\n\t\n\t    this.resize = function (e) {\n\t        s.view.width = element.clientWidth;\n\t        s.view.height = element.clientHeight;\n\t\n\t        s.view.renderer.setSize(s.view.width, s.view.height);\n\t        s.view.composer.setSize(s.view.width, s.view.height);\n\t        s.view.camera.left = s.view.width / -2;\n\t        s.view.camera.right = s.view.width / 2;\n\t        s.view.camera.top = s.view.height / 2;\n\t        s.view.camera.bottom = s.view.height / -2;\n\t        s.view.camera.updateProjectionMatrix();\n\t    };\n\t\n\t    function emitGlobalEvent(e, eName, data, sprite) {\n\t        if (s.globalEvents && s.globalEvents[eName]) {\n\t            if (data && sprite) {\n\t                s.globalEvents[eName](e, data, sprite);\n\t            } else {\n\t                s.globalEvents[eName](e);\n\t            }\n\t        }\n\t    }\n\t\n\t    function emitNodeEvent(e, eName, elem) {\n\t        var intersected = elem !== undefined ? elem : s.intersect.node ? s.intersect.node.object : undefined;\n\t        if (intersected) {\n\t            var events = s.nodes[intersected._type].events;\n\t            var event = events[eName],\n\t                node = s.model.findNode(intersected._id);\n\t            emitGlobalEvent(e, eName, node, intersected);\n\t            if (event) {\n\t                event(e, node, intersected);\n\t            }\n\t        }\n\t    }\n\t\n\t    element.addEventListener('mousemove', this.mouseMove, false);\n\t    element.addEventListener('mousedown', this.mouseDown, false);\n\t    element.addEventListener('mouseup', this.mouseUp, false);\n\t    element.addEventListener('dblclick', this.dblclick, false);\n\t    element.addEventListener('contextmenu', this.contextmenu, false);\n\t    //window.addEventListener('resize', this.resize, false);\n\t\n\t    s.view.controls.addEventListener('change', this.controlsChanged);\n\t\n\t};\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** GB.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f7d1b51ea0ef298d9f53\n **/","exports.version = '0.0.1';\n\nexports.graph = require('./graph');\nexports.view = require('./view');\nexports.model = require('./model');\nexports.nodeTypes = require('./nodeTypes');\nexports.events = require('./events');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GB.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (cfg) {\n    var s = {\n        start: start,\n        view: new GB.view(cfg.element),\n        nodes: new GB.nodeTypes(cfg.nodes),\n        config: cfg.config || {},\n        globalEvents: cfg.events || {},\n        intersect: {\n            node: []\n        },\n        clicked: {\n            last: null,\n            prev: null\n        }\n    };\n    s.model = new GB.model(null, s);\n    s.events = new GB.events(cfg.element, s);\n\n    function start() {\n        requestAnimationFrame(start);\n        s.view.controls.update();\n        render();\n    }\n\n    function render() {\n        s.model.data.nodes.forEach(function (item) {\n            var obj = s.view.scene.getObjectById(item.data.nodeId, true);\n            if (obj) {\n                obj.position.x = countX(item.x);\n                obj.position.y = countY(item.y);\n            }\n        });\n        s.model.data.links.forEach(function (item) {\n            var obj = s.view.scene.getObjectById(item.linkId, true);\n            obj.geometry.vertices[0].x = countX(item.source.x);\n            obj.geometry.vertices[0].y = countY(item.source.y);\n\n            obj.geometry.vertices[1].x = countX(item.target.x);\n            obj.geometry.vertices[1].y = countY(item.target.y);\n            obj.geometry.verticesNeedUpdate = true;\n            obj.geometry.computeBoundingSphere();\n        });\n\n        s.view.raycaster.setFromCamera(s.view.mouse, s.view.camera);\n        s.intersect.node = s.view.raycaster.intersectObjects(s.view.nodes.children)[0];\n        s.view.composer.render();\n        if (s.hud)\n            s.view.renderer.render(s.hud.scene, s.hud.camera);\n    }\n\n    function countX(x) {\n        return x - s.view.width / 2;\n    }\n\n    function countY(y) {\n        return -(y - s.view.height / 2);\n    }\n\n    return s;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/graph.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = function (element) {\n    this.width = element.offsetWidth;\n    this.height = element.offsetHeight;\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.OrthographicCamera(-this.width / 2, this.width / 2, this.height / 2, -this.height / 2, 0, 15);\n    this.camera.position.z = 10;\n    this.camera.zoom = 4;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer = new THREE.WebGLRenderer({antialias: false, alpha: true});\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.autoClear = false;\n\n    var renderModel = new THREE.RenderPass(this.scene, this.camera);\n    var effectBloom = new THREE.BloomPass(.7);\n    var effectCopy = new THREE.ShaderPass(THREE.CopyShader);\n    var effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n    effectFXAA.uniforms['resolution'].value.set(1 / this.width, 1 / this.height);\n    effectCopy.renderToScreen = true;\n\n    this.composer = new THREE.EffectComposer(this.renderer);\n    this.composer.setSize(this.width, this.height);\n\n    this.composer.addPass(renderModel);\n    this.composer.addPass(effectFXAA);\n    this.composer.addPass(effectBloom);\n    this.composer.addPass(effectCopy);\n\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n\n    this.nodes = new THREE.Object3D;\n    this.links = new THREE.Object3D;\n    this.links.position.z = 4;\n    this.nodes.position.z = 6;\n\n    this.scene.add(this.nodes);\n    this.scene.add(this.links);\n\n    this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.mouseButtons = {ORBIT: null, ZOOM: null, PAN: THREE.MOUSE.LEFT};\n    this.controls.minZoom = 0.5;\n    this.controls.maxZoom = 10;\n\n    element.appendChild(this.renderer.domElement);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/view.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = function (data, s) {\n    this.data = data || {\n            \"nodes\": [],\n            \"links\": []\n        };\n\n    this.force = d3.layout.force()\n        .nodes(this.data.nodes)\n        .links(this.data.links)\n        .gravity(0.002)\n        .charge(-100)\n        .linkDistance(35)\n        .size([s.view.width, s.view.height])\n        .start();\n\n    this.addNode = function (id, data, type, fixed, pos) {\n        if (this.findNode(id)) {\n            return;\n        }\n\n        type = type ? type : 'default';\n\n        var node = new THREE.Sprite(new THREE.SpriteMaterial(s.nodes[type].material));\n        node._type = type;\n        node._id = id;\n        s.view.nodes.add(node);\n\n        data.nodeId = node.id;\n        data.type = type;\n\n        this.data.nodes.push({\n            \"id\": id,\n            data: data,\n            fixed: fixed || false,\n            x: pos ? pos.x : undefined,\n            y: pos ? pos.y : undefined\n        });\n\n        s.view.controls.dispatchEvent({type: 'change'});\n        this.force.start();\n    };\n    this.addLink = function (source, target, value, color) {\n        for (var i = 0; i < this.data.links.length; i++) {\n            if (this.data.links[i]['source'].id === source && this.data.links[i]['target'].id === target) {\n                return;\n            }\n        }\n\n        var geometry = new THREE.Geometry();\n        geometry.vertices.push(\n            new THREE.Vector3(0, 0, 0),\n            new THREE.Vector3(1, 0, 0)\n        );\n        var line = new THREE.Line(geometry, new THREE.LineBasicMaterial({\n            color: color || 0x7f8c8d\n        }));\n        s.view.links.add(line);\n\n        this.data.links.push({\n            \"source\": this.findNode(source),\n            \"target\": this.findNode(target),\n            \"value\": value,\n            \"linkId\": line.id\n        });\n\n        this.force.start();\n    };\n    this.findNode = function (id) {\n        for (var i in this.data.nodes) {\n            if (this.data.nodes[i][\"id\"] === id) return this.data.nodes[i];\n        }\n    };\n    this.removeNode = function (id) {\n        var i = 0;\n        var n = this.findNode(id);\n        s.view.nodes.remove(s.view.nodes.getObjectById(n.data.nodeId, true));\n\n        while (i < this.data.links.length) {\n            if ((this.data.links[i]['source'].id === id) || (this.data.links[i]['target'].id === id)) {\n                s.view.links.remove(s.view.links.getObjectById(this.data.links[i].linkId, true));\n                this.data.links.splice(i, 1);\n            }\n            else i++;\n        }\n        this.data.nodes.splice(this.findNodeIndex(id), 1);\n\n        this.force.start();\n    };\n    this.findNodeIndex = function (id) {\n        for (var i = 0; i < this.data.nodes.length; i++) {\n            if (this.data.nodes[i].id == id) {\n                return i;\n            }\n        }\n    };\n    this.allNodeLinks = function (id) {\n        var arr = [];\n        this.data.links.forEach(function (item) {\n            if (item['source'].id == id) {\n                arr.push(item['target'].id);\n            } else if (item['target'].id == id) {\n                arr.push(item['source'].id);\n            }\n        });\n        return arr;\n    };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/model.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = function (data) {\n    function nodeType(data) {\n        var textureLoader = new THREE.TextureLoader();\n\n        this.material = {\n            map: textureLoader.load(data.material.texture) || null,\n            color: data.material.color || null,\n            rotation: data.material.rotation || null,\n            fog: data.material.fog || null\n        };\n        this.texture = data.material.texture;\n\n        this.startScale = data.material.scale;\n        this.draggable = data.draggable === undefined ? true : data.draggable;\n        this.events = data.events || {};\n    }\n\n    var types = {};\n    for (var key in data) {\n        types[key] = new nodeType(data[key]);\n    }\n    return types;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nodeTypes.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = function (element, s) {\n    var overElement;\n\n    this.mouseMove = function (e) {\n        e.preventDefault();\n\n        s.view.mouse.x = ( e.clientX / element.clientWidth ) * 2 - 1;\n        s.view.mouse.y = -( e.clientY / element.clientHeight ) * 2 + 1;\n\n\n        if (!s.view.controls.enabled) {\n            s.view.controls.drag.fixed = true;\n            s.view.controls.drag.dragged = true;\n            s.view.controls.drag.px = s.view.raycaster.ray.origin.x + s.view.width / 2;\n            s.view.controls.drag.py = -(s.view.raycaster.ray.origin.y - s.view.height / 2);\n            s.model.force.start();\n            emitNodeEvent(e, 'mousemove', overElement);\n            return;\n        }\n        if (s.intersect.node) {\n            if (!overElement) {\n                overElement = s.intersect.node.object;\n                emitNodeEvent(e, 'mouseover', overElement);\n            } else if (overElement !== s.intersect.node.object) {\n                emitNodeEvent(e, 'mouseout', overElement);\n                overElement = null;\n            }\n            emitNodeEvent(e, 'mousemove');\n        } else if (overElement) {\n            emitNodeEvent(e, 'mouseout', overElement);\n            overElement = null;\n        }\n    };\n\n    this.mouseDown = function (e) {\n        if (e.button !== 0) {\n            return;\n        }\n        e.preventDefault();\n\n        if (s.intersect.node && s.nodes[s.intersect.node.object._type].draggable) {\n            s.view.controls.enabled = false;\n            s.view.controls.drag = s.model.findNode(s.intersect.node.object._id);\n            s.view.controls.drag.dragged = false;\n        }\n    };\n\n    this.mouseUp = function (e) {\n        if (e.button !== 0) {\n            return;\n        }\n        e.preventDefault();\n\n        s.view.controls.enabled = true;\n\n        if (s.intersect.node) {\n            s.clicked.prev = s.clicked.last;\n            s.clicked.last = s.intersect.node.object;\n        } else {\n            emitGlobalEvent(e, 'emptyClick');\n            s.clicked.last = null;\n        }\n\n        if (s.view.controls.drag) {\n            if (!s.view.controls.drag.dragged) {\n                emitNodeEvent(e, 'click');\n            }\n\n            s.view.controls.drag.dragged = false;\n        }\n    };\n\n    this.dblclick = function (e) {\n        emitNodeEvent(e, 'dblclick');\n    };\n\n    this.contextmenu = function (e) {\n        emitNodeEvent(e, 'contextmenu');\n    };\n\n    this.controlsChanged = function (e) {\n        if (s.config.updateNodeScale) {\n            s.view.nodes.children.forEach(function (item) {\n                var scale = (s.view.controls.maxZoom - s.view.camera.zoom) + s.nodes[item._type].startScale;\n                item.scale.set(scale, scale, 1);\n            });\n        }\n        emitGlobalEvent(e, 'controlsChanged');\n    };\n\n    this.resize = function (e) {\n        s.view.width = element.clientWidth;\n        s.view.height = element.clientHeight;\n\n        s.view.renderer.setSize(s.view.width, s.view.height);\n        s.view.composer.setSize(s.view.width, s.view.height);\n        s.view.camera.left = s.view.width / -2;\n        s.view.camera.right = s.view.width / 2;\n        s.view.camera.top = s.view.height / 2;\n        s.view.camera.bottom = s.view.height / -2;\n        s.view.camera.updateProjectionMatrix();\n    };\n\n    function emitGlobalEvent(e, eName, data, sprite) {\n        if (s.globalEvents && s.globalEvents[eName]) {\n            if (data && sprite) {\n                s.globalEvents[eName](e, data, sprite);\n            } else {\n                s.globalEvents[eName](e);\n            }\n        }\n    }\n\n    function emitNodeEvent(e, eName, elem) {\n        var intersected = elem !== undefined ? elem : s.intersect.node ? s.intersect.node.object : undefined;\n        if (intersected) {\n            var events = s.nodes[intersected._type].events;\n            var event = events[eName],\n                node = s.model.findNode(intersected._id);\n            emitGlobalEvent(e, eName, node, intersected);\n            if (event) {\n                event(e, node, intersected);\n            }\n        }\n    }\n\n    element.addEventListener('mousemove', this.mouseMove, false);\n    element.addEventListener('mousedown', this.mouseDown, false);\n    element.addEventListener('mouseup', this.mouseUp, false);\n    element.addEventListener('dblclick', this.dblclick, false);\n    element.addEventListener('contextmenu', this.contextmenu, false);\n    //window.addEventListener('resize', this.resize, false);\n\n    s.view.controls.addEventListener('change', this.controlsChanged);\n\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/events.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}